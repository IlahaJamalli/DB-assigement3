DROP TABLE IF EXISTS public.firstnf_table
DROP TABLE IF EXISTS public.secondnf_book_authors
DROP TABLE IF EXISTS public.secondnf_course_books
DROP TABLE IF EXISTS public.secondnf_authors
DROP TABLE IF EXISTS public.secondnf_books
DROP TABLE IF EXISTS public.secondnf_courses
DROP TABLE IF EXISTS public.thirdnf_books
DROP TABLE IF EXISTS public.thirdnf_books_publisher
DROP TABLE IF EXISTS public.thirdnf_publisher
DROP TABLE IF EXISTS public.unnormalizedform

CREATE DATABASE assigment3;


CREATE TABLE unnormalizedform(
    CRN INT,
    ISBN VARCHAR(13),
    Title VARCHAR(255),
    Authors VARCHAR(255),
    Edition VARCHAR(50),
    Publisher VARCHAR(255),
    Publisher_Address VARCHAR(255),
    Pages INT,
    Year INT,
    Course_Name VARCHAR(255)
);


COPY unnormalizedform FROM 'C:\Users\User\db.csv' DELIMITER ',' CSV HEADER;

--SELECT * FROM public.unnormalizedform

CREATE TABLE FirstNf_Table (
    CRN INT,
    ISBN VARCHAR(13),
    Title VARCHAR(255),
    Author VARCHAR(255),
    Edition VARCHAR(50),
    Publisher VARCHAR(255),
    Publisher_address text,
    Pages INT,
    Year INT,
    Course_Name VARCHAR(255)
);

INSERT INTO FirstNf_Table (CRN, ISBN, Title, Author, Edition, Publisher,Publisher_address, Pages, Year, Course_Name)
SELECT CRN, ISBN, Title, unnest(string_to_array(Authors, ',')), Edition, Publisher,Publisher_address, Pages, Year, Course_Name
FROM unnormalizedform

--SELECT * FROM public.FirstNf_Table


CREATE TABLE SecondNf_Courses(
    CRN INT,
    Course_Name VARCHAR(255),
    PRIMARY KEY (CRN)
);

INSERT INTO SecondNf_Courses(CRN, Course_Name) SELECT DISTINCT CRN, Course_Name FROM unnormalizedform
SELECT * FROM public.secondnf_courses

CREATE TABLE SecondNf_Books(
    ISBN VARCHAR(13),
    Title VARCHAR(255),
    Edition VARCHAR(50),
    Publisher VARCHAR(255),
    Publisher_address TEXT,
    Pages INT,
    Year INT,
    PRIMARY KEY (ISBN)
);

INSERT INTO SecondNf_Books(ISBN, Title, Edition, Publisher, Publisher_address, Pages, Year)
SELECT DISTINCT ISBN, Title, Edition, Publisher, Publisher_address, Pages, Year FROM FirstNf_Table;

SELECT * FROM public.secondnf_books


CREATE TABLE SecondNf_Authors AS 
SELECT DISTINCT Author AS Author_Name FROM FirstNf_Table;

ALTER TABLE SecondNf_Authors ADD Author_ID SERIAL PRIMARY KEY;

SELECT * FROM public.secondnf_authors

CREATE TABLE SecondNf_Book_Authors AS
SELECT DISTINCT 
    FirstNf_Table.ISBN,
    SecondNf_Authors.Author_ID
FROM FirstNf_Table
JOIN SecondNf_Authors ON FirstNf_Table.author = SecondNf_Authors.author_name;

SELECT * FROM public.secondnf_book_authors

CREATE TABLE SecondNf_Course_Books AS
SELECT DISTINCT 
    FirstNf_Table.ISBN,
    SecondNf_Courses.CRN
FROM FirstNf_Table JOIN SecondNf_Courses ON FirstNf_Table.course_name = SecondNf_Courses.course_name;

SELECT * FROM public.secondnf_course_books

CREATE TABLE ThirdNf_Publisher AS 
SELECT DISTINCT 
Publisher AS Publisher_name, Publisher_address FROM SecondNf_Books

ALTER TABLE ThirdNf_Publisher ADD Publisher_id SERIAL PRIMARY KEY;

SELECT * FROM public.thirdnf_publisher

CREATE TABLE ThirdNf_Books AS 
SELECT ISBN, title, edition, pages, year FROM SecondNf_Books;

SELECT * FROM public.thirdnf_books

CREATE TABLE ThirdNF_Books_Publisher AS 
SELECT DISTINCT 
    SecondNf_Books.ISBN,
    ThirdNf_Publisher.publisher_id
FROM SecondNf_Books
JOIN ThirdNf_Publisher ON SecondNf_Books.publisher = ThirdNf_Publisher.publisher_name;

SELECT * FROM public.thirdnf_books_publisher









